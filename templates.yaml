# Ambee Pollen Template Sensors
- sensor:
  - name: "Ambee Pollen Tree"
    state: >
      {% set state = state_attr('sensor.ambee_pollen', 'tree_pollen') %}
      {% if state == "Low" %}25
      {% elif state == "Moderate"%}50
      {% elif state == "High"%}75
      {% elif state == "Very High"%}100
      {% else %}Unknown{% endif %}
    icon: mdi:tree-outline
    attributes:
      friendly_name: "Tree Pollen"

  - name: "Ambee Pollen Weed"
    state: >
      {% set state = state_attr('sensor.ambee_pollen', 'weed_pollen') %}
      {% if state == "Low" %}25
      {% elif state == "Moderate"%}50
      {% elif state == "High"%}75
      {% elif state == "Very High"%}100
      {% else %}Unknown{% endif %}
    icon: mdi:nature
    attributes:
      friendly_name: "Weed Pollen"

  - name: "Ambee Pollen Grass"
    state: >
      {% set state = state_attr('sensor.ambee_pollen', 'grass_pollen') %}
      {% if state == "Low" %}25
      {% elif state == "Moderate"%}50
      {% elif state == "High"%}75
      {% elif state == "Very High"%}100
      {% else %}Unknown{% endif %}
    icon: mdi:grass
    attributes:
      friendly_name: "Grass Pollen"

# Gasprijs Kosten
- sensor:
  - name: "Huidige gas prijs inkoop"
    unit_of_measurement: "€/m³"
    state: >
        {% set current_time = now().strftime('%Y-%m-%dT%H:00:00Z') %}
        {% set price = state_attr('sensor.energyzero_gas_prijs_per_dag', 'Prices') | selectattr('readingDate','eq', current_time) | map(attribute='price') | first %}
        {{ "{:,.3f}".format(price) }}
- sensor:
  - name: "Huidige gas prijs all-in"
    unit_of_measurement: "€/m³"
    state: >
        {% set current_time = now().strftime('%Y-%m-%dT%H:00:00Z') %}
        {% set price = state_attr('sensor.energyzero_gas_prijs_per_dag', 'Prices') | selectattr('readingDate','eq', current_time) | map(attribute='price') | first %}
        {% set gas_btw = states('input_number.gas_btw') | float %}
        {% set gas_energie_belasting = states('input_number.gas_energie_belasting') | float %}
        {% set gas_energie_opslag = states('input_number.gas_energie_opslag') | float %}
        {{ (( price+gas_energie_belasting+gas_energie_opslag) * gas_btw) | round(5) }}
- sensor:
  - name: "Today's Gas Cost"
    unit_of_measurement: '€'
    state: >
        {% set gas_consumption = states('sensor.gas_verbruik_dagelijks') | float %}
        {% set gas_price = states('sensor.huidige_gas_prijs_all_in') | float %}
        {{ (gas_consumption * gas_price) | round(2) }}

# Water prijs & verbruiks kosten
- sensor:
  - name: "Huidige water prijs"
    unique_id: "huidige_water_prijs"
    unit_of_measurement: '€/m³'
    state: >
        {% set water_btw = states('input_number.water_btw') | float %}
        {% set water_prijs = states('input_number.water_prijs') | float %}
        {{ (water_prijs*water_btw) | round(2) }}
- sensor:
  - name: "Today's water Cost"
    unit_of_measurement: '€'
    state: >
        {% set water_consumption = states('sensor.water_per_dag') | float %}
        {% set water_btw = states('input_number.water_btw') | float %}
        {% set water_prijs = states('input_number.water_prijs') | float %}
        {{ ((water_consumption * water_prijs)*water_btw) | round(2) }}
- sensor:
  - name: "This month water Cost"
    unit_of_measurement: '€'
    state: >
        {% set water_consumption = states('sensor.water_per_maand') | float %}
        {% set water_btw = states('input_number.water_btw') | float %}
        {% set water_prijs = states('input_number.water_prijs') | float %}
        {{ ((water_consumption * water_prijs)*water_btw) | round(2) }}
- sensor:
  - name: "This year water Cost"
    unit_of_measurement: '€'
    state: >
        {% set water_consumption = states('sensor.water_per_jaar') | float %}
        {% set water_btw = states('input_number.water_btw') | float %}
        {% set water_prijs = states('input_number.water_prijs') | float %}
        {{ ((water_consumption * water_prijs)*water_btw) | round(2) }}

# Stroom prijs kosten
- sensor:
  - name: "Volgend uur stroom prijs inkoop"
    unit_of_measurement: "€/kWh"
    state: "{{ states('sensor.nordpool_kwh_nl_eur_5_10_0') }}"
    attributes:
      price: >
        {% set data = namespace(prices=[]) %}
        {% set next_timestamp = now().timestamp() + 3600 %}
        {% set next_iso_time = (next_timestamp|timestamp_custom("%Y-%m-%d %H:00:00+01:00", True)) %}
        {% set raw_today = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'raw_today') %}
        {% set price = None %}
        
        {% for entry in raw_today %}
          {% set entry_start = entry.start | string  %}
          {% if entry_start == next_iso_time %}
            {% set data.prices = data.prices + [entry.value] %}
            {% break %}
          {% endif %}
        {% endfor %}
        {% if data.prices %}
          {{ data.prices[0] }}
        {% else %}
          No data for today
        {% endif %}
- sensor:
  - name: "Volgend uur stroom prijs All-in"
    unit_of_measurement: "€/kWh"
    state: "{{ states('sensor.volgend_uur_stroom_prijs_inkoop') }}"
    attributes:
      price: >
        {% set price = state_attr('sensor.volgend_uur_stroom_prijs_inkoop', 'price') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}
- sensor:
  - name: "Huidige stroom prijs all-in"
    unit_of_measurement: "€/kWh"
    state: "{{ states('sensor.nordpool_kwh_nl_eur_5_10_0') }}"
    attributes:
      price: >
        {% set price = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'current_price') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}
- sensor:
  - name: "Laagste stroom prijs all-in"
    unit_of_measurement: "€/kWh"
    state: "{{ states('sensor.nordpool_kwh_nl_eur_5_10_0') }}"
    attributes:
      price: >
        {% set price = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'min') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}
- sensor:
  - name: "Hoogste stroom prijs all-in"
    unit_of_measurement: "€/kWh"
    state: "{{ states('sensor.nordpool_kwh_nl_eur_5_10_0') }}"
    attributes:
      price: >
        {% set price = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'max') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}

# Stof sensors
- sensor:
  - name: "PM 10"
    unique_id: "sensor_pm10"
    state: '{{ states.sensor.outside_air_quality.attributes.sensordatavalues[0].value }}'
    unit_of_measurement: "μg/m³"
    icon: "mdi:weather-fog"
  - name: "PM 2.5"
    unique_id: "sensor_pm25"
    state: '{{ states.sensor.outside_air_quality.attributes.sensordatavalues[1].value }}'
    unit_of_measurement: "μg/m³"
    icon: "mdi:weather-fog"
  - name: "Temperature"
    unique_id: "sensor_temperature"
    state: '{{ states.sensor.outside_air_quality.attributes.sensordatavalues[2].value | float | round(1) }}'
    unit_of_measurement: "°C"
    icon: "mdi:thermometer"
  - name: "Pressure"
    unique_id: "sensor_pressure"
    state: '{{ states.sensor.outside_air_quality.attributes.sensordatavalues[3].value }}'
    unit_of_measurement: "bar"
    icon: "mdi:gauge-low"
  - name: "Humidity"
    unique_id: "sensor_humidity"
    state: '{{ states.sensor.outside_air_quality.attributes.sensordatavalues[4].value }}'
    unit_of_measurement: "%"
    icon: "mdi:water-percent"
