# NordPool Stroom Prijzen Sensor
- platform: nordpool
  region: "NL"
  currency: "EUR"
  VAT: False
  precision: 5
  price_in_cents: false
  price_type: kWh


- platform: template
  sensors:
    stroom_prijs_volgend_uur:
      icon_template: "mdi:home-lightning-bolt"
      friendly_name: "Volgend uur stroom prijs inkoop"
      unit_of_measurement: "€/kWh"
      value_template: >-
        {% set data = namespace(prices=[]) %}
        {% set next_timestamp = now().timestamp() + 3600 %}
        {% set next_iso_time = (next_timestamp|timestamp_custom("%Y-%m-%d %H:00:00+01:00", True)) %}
        {% set raw_today = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'raw_today') %}
        {% set price = None %}
        
        {% for entry in raw_today %}
          {% set entry_start = entry.start | string  %}
          {% if entry_start == next_iso_time %}
            {% set data.prices = data.prices + [entry.value] %}
            {% break %}
          {% endif %}
        {% endfor %}
        {% if data.prices %}
          {{ data.prices[0] }}
        {% else %}
          No data for today
        {% endif %}
        
        
- platform: template
  sensors:
    stroom_prijs_volgend_uur_all_in:
      icon_template: "mdi:home-lightning-bolt"
      friendly_name: "Volgend uur stroom prijs All-in"
      unit_of_measurement: "€/kWh"
      value_template: >-
        {% set price = state_attr('sensor.volgend_uur_stroom_prijs_inkoop', 'price') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}
        
- platform: template
  sensors:
    stroom_prijs_huidig_all_in:
      icon_template: "mdi:home-lightning-bolt"
      friendly_name: "Huidige stroom prijs all-in"
      unit_of_measurement: "€/kWh"
      value_template: >-
        {% set price = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'current_price') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}
        
- platform: template
  sensors:
    stroom_prijs_laagste_all_in:
      icon_template: "mdi:home-lightning-bolt"
      friendly_name: "Laagste stroom prijs all-in"
      unit_of_measurement: "€/kWh"
      value_template: >-
        {% set price = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'min') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}

- platform: template
  sensors:
    stroom_prijs_hoogste_all_in:
      icon_template: "mdi:home-lightning-bolt"
      friendly_name: "Hoogste stroom prijs all-in"
      unit_of_measurement: "€/kWh"
      value_template: >-
        {% set price = state_attr('sensor.nordpool_kwh_nl_eur_5_10_0', 'max') %}
        {% set stroom_btw = states('input_number.stroom_btw') | float %}
        {% set stroom_energie_belasting = states('input_number.stroom_energie_belasting') | float %}
        {% set stroom_energie_opslag = states('input_number.stroom_energie_opslag') | float %}
        {{ (( price+stroom_energie_belasting+stroom_energie_opslag) * stroom_btw) | round(5) }}

- platform: template
  sensors:
    stroom_kosten_uur:
      icon_template: "mdi:home-lightning-bolt"
      friendly_name: "Stroom kosten per uur"
      unit_of_measurement: "€"
      value_template: >-
        {% set gas_consumption = states('sensor.gas_verbruik_per_uur') | float %}
        {% set gas_price = states('sensor.huidige_gas_prijs_all_in') | float %}
        {{ (gas_consumption * gas_price) | round(2) }}
